// 17. 배열 사용하기 

var arr = [1,2,3,4,5];
arr.pop(); // 배열 arr에 pop() 명령을 실행하면 5 반환
arr;  // 1, 2, 3, 4, 5에서 맨 뒤에 있던 5가 빠진 것을 확인 

arr.shift(); // 배열 arr에 shift() 명령을 실행하면 맨 앞에 있는 1 반환
arr // 1, 2, 3, 4에서 맨 앞에 있던 1이 빠진 것을 확인

arr.push(6); // 배열 arr에 push() 명령을 실행하면 길이가 4인 배열이 된다는 뜻으로 4를 반환
arr // [2, 3, 4, 6]; 배열의 맨 뒤에 6이라는 엘리먼트가 들어간 것을 확인

arr.unshift(0); // 배열 arr에 unshift() 명령을 실행하면 길이가 5인 배열이 된다는 뜻으로 5를 반환
arr; // [0, 2, 3, 4, 6]; 0이 맨 앞에 추가된 것을 확인

arr.reverse(); // reverse() 명령을 입력하면 
// [6, 4, 3, 2, 0]; 배열의 순서가 뒤집혀서 반환됨(실제로 상태도 바뀜)

arr.sort(); // sort() 명령을 입력하면
// [0, 2, 3, 4, 6]; 다시 배열의 값을 정렬


var arr1 = [1,2,3]; // 배열 arr1 arr2 초기화
var arr2 = [4,5,6];
arr1.concat(arr2); // concat() 명령을 실행하면
// [1, 2, 3, 4, 5, 6]; 두 배열을 합쳐서 반환
arr1 // [1,2,3]; 단, 배열 arr1, arr2의 상태에는 변화가 없음
arr3 = arr1.concat(arr2); // 합친 배열을 활용하려면 arr3에 저장
// [1, 2, 3, 4, 5, 6]


// --------------
// concat()와 push()의 차이 

arr1.concat(arr2); // [1,2,3,4,5,6]
arr1.push(arr2); // [1,2,3,[4,5,6]]

// --------------


var arr4 = [1,2,3,1,2,3]; // 배열 초기화 
arr4.indexOf(2); // indexOf() 명령을 이용해서 2를 찾으면
// 1; 2가 처음 나오는 곳의 위치(인덱스)인 1을 반환
arr3.lastIndexOf(2); // lastIndexOf() 명령을 이용해서 2를 검색하면
// 4; 2가 마지막에 나오는 곳의 위치(인덱스)인 4를 반환

var str = "1,2,3,4,5"; // 문자열 초기화 
str.split(","); // 쉼표로 구분(split)하면 
// (5) [“1”, “ 2”, “ 3”, “ 4”, “ 5”]; 1, 2, 3, 4, 5가 각각 배열 안에 들어간 채로 반환됨


// 주석 활용하기 
// var name = "홍길동"; // 개발할 때는 사용자 입력 대신 변수를 만들어 사용하면 편리함 
var name = prompt("이름을 입력해 주세요."); // 사용자에게 이름을 입력 받음 
var msg = "당신의 이름은 " + name + "입니다. " + name + "님의 이름은 " + name.length + "글자입니다." 
// console.log(msg); // 개발할 때는 경고 창을 띄우지 않고 콘솔에서 메시지를 확인 
alert(msg); // 사용자에게 메시지 전달 

